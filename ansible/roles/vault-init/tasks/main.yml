- name: Create unseal directories
  ansible.builtin.file:
    path: "{{ unseal_keys_dir_output }}"
    state: directory
  delegate_to: localhost

- name: Create root key directories
  ansible.builtin.file:
    path: "{{ root_token_dir_output }}"
    state: directory
  delegate_to: localhost

- name: Get vault status
  ansible.builtin.shell: vault operator init -status
  environment:
    VAULT_ADDR: "{{ vault_address }}:{{ vault_port }}"
  register: vault_init_status
  failed_when: vault_init_status.rc not in [ 0, 2 ]

- name: Reset Vault
  include_tasks: reset.yml
  when: vault_init_status.stdout == "Vault is initialized"

- name: Vault operator init
  ansible.builtin.shell: |
    vault operator init -key-shares=5 -key-threshold=3 -format json
  environment:
    VAULT_ADDR: "{{ vault_address }}:{{ vault_port }}"
  register: vault_init_results

- name: Parse output of vault init
  set_fact:
    vault_init_parsed: "{{ vault_init_results.stdout | from_json }}"

- name: Write unseal keys to files
  ansible.builtin.copy:
    dest: "{{ vault_config_folder }}/{{ vault_keys_folder }}/unseal_key_{{ item.0 }}"
    content: "{{ item.1 }}"
    owner: root
    group: root
    mode: '0400'
  with_indexed_items: "{{ vault_init_parsed.unseal_keys_hex }}"
  delegate_to: localhost

- name: Write root token to file
  ansible.builtin.copy:
    dest: "{{ vault_config_folder }}/{{ vault_root_token_folder }}//rootkey"
    content: "{{ vault_init_parsed.root_token }}"
    owner: root
    group: root
    mode: '0400'
  delegate_to: localhost

